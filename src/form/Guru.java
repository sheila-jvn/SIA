/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import database.Database; // Changed import

/**
 *
 * @author sheila
 */
public class Guru extends javax.swing.JFrame {

    private Connection conn; // Modified: Initialize in constructor
    private DefaultTableModel tabmode;
    private String selectedGuruId;

    /**
     * Creates new form guru
     */
    public Guru() {
        initComponents();
        lblSelectedGuru.setText("-"); // Initialize label
        selectedGuruId = null;      // Initialize ID
        try {
            conn = Database.getConnection(); // Added: Get connection from Database class
            reset();
            loadTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Failed to connect to database: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            // Optionally, disable UI components or close the form if connection is critical
            // For example, you might want to disable buttons or even call System.exit(1);
        }
    }

    private void reset() {
        // txtid.setText(""); // Not used for input
        txtNip.setText("");
        txtNama.setText("");
        spnTanggalLahir.setValue(new java.util.Date()); // Reset to current date
        txtNoTelpon.setText("");
        // txt_mapel.setText(""); // Field not in guru table schema
        // txt_waliKelas.setText(""); // Field not in guru table schema
        buttonGroup1.clearSelection();
        lblSelectedGuru.setText("-"); // Reset selected guru label
        selectedGuruId = null;      // Clear selected guru ID
    }

    private void loadTable() {
        Object[] Baris = {"ID", "NIP", "Nama", "Tanggal Lahir", "Jenis Kelamin", "No. Telepon"};
        tabmode = new DefaultTableModel(null, Baris);
        String cariitem = txtSearch.getText();

        try {
            String sql = "SELECT id, nip, nama, tanggal_lahir, jenis_kelamin, no_telpon FROM guru WHERE id LIKE ? OR nama LIKE ? ORDER BY id ASC";
            PreparedStatement stat = conn.prepareStatement(sql);
            String searchTerm = "%" + cariitem + "%";
            stat.setString(1, searchTerm);
            stat.setString(2, searchTerm);
            ResultSet hasil = stat.executeQuery();

            while (hasil.next()) {
                Boolean jkBool = hasil.getObject("jenis_kelamin") != null ? hasil.getBoolean("jenis_kelamin") : null;
                String jenisKelaminStr = "";
                if (jkBool != null) {
                    jenisKelaminStr = jkBool ? "Laki-laki" : "Perempuan";
                }

                tabmode.addRow(new Object[]{
                    hasil.getString("id"),
                    hasil.getString("nip"),
                    hasil.getString("nama"),
                    hasil.getDate("tanggal_lahir"),
                    jenisKelaminStr,
                    hasil.getString("no_telpon")
                });
            }
            tblGuru.setModel(tabmode);
        } catch (SQLException e) { // Catch SQLException specifically
            JOptionPane.showMessageDialog(null, "Data gagal dipanggil: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNip = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        radLaki = new javax.swing.JRadioButton();
        radPerempuan = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txtNoTelpon = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGuru = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        spnTanggalLahir = new javax.swing.JSpinner();
        lblSelectedGuru = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel2.setText("Form Guru");

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel1.setText("Guru dipilih:");

        jLabel3.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel3.setText("NIP");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel4.setText("Nama");

        jLabel5.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel5.setText("TTL");

        jLabel6.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel6.setText("Jenis Kelamin");

        buttonGroup1.add(radLaki);
        radLaki.setText("Laki-Laki");

        buttonGroup1.add(radPerempuan);
        radPerempuan.setText("Perempuan");

        jLabel7.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel7.setText("No. Telepon");

        btnCreate.setText("SIMPAN");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setText("UBAH");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("HAPUS");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setText("BATAL");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnExit.setText("KELUAR");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        tblGuru.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblGuru.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGuruMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGuru);

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        btnSearch.setText("CARI");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        spnTanggalLahir.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));

        lblSelectedGuru.setText("[PLACEHOLDER]");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSelectedGuru)
                                    .addComponent(txtNip, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                    .addComponent(spnTanggalLahir))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radLaki, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(radPerempuan))
                                    .addComponent(txtNoTelpon, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblSelectedGuru))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNip, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(radLaki)
                    .addComponent(radPerempuan))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtNoTelpon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spnTanggalLahir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String nip = txtNip.getText();
        String nama = txtNama.getText();
        java.util.Date utilTanggalLahir = (java.util.Date) spnTanggalLahir.getValue();
        String noTelpon = txtNoTelpon.getText();

        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Guru tidak boleh kosong.", "Validasi Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        java.sql.Date sqlTanggalLahir = null;
        if (utilTanggalLahir != null) {
            sqlTanggalLahir = new java.sql.Date(utilTanggalLahir.getTime());
        }

        Boolean jenisKelaminDbValue = null;
        if (radLaki.isSelected()) {
            jenisKelaminDbValue = true; // Represents 1 for Laki-laki
        } else if (radPerempuan.isSelected()) {
            jenisKelaminDbValue = false; // Represents 0 for Perempuan
        }

        try {
            String sql = "INSERT INTO guru (nip, nama, tanggal_lahir, jenis_kelamin, no_telpon) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement stat = conn.prepareStatement(sql);

            if (nip.isEmpty()) {
                stat.setNull(1, java.sql.Types.VARCHAR);
            } else {
                stat.setString(1, nip);
            }
            stat.setString(2, nama);

            if (sqlTanggalLahir == null) {
                stat.setNull(3, java.sql.Types.DATE);
            } else {
                stat.setDate(3, sqlTanggalLahir);
            }

            if (jenisKelaminDbValue == null) {
                stat.setNull(4, java.sql.Types.BOOLEAN);
            } else {
                stat.setBoolean(4, jenisKelaminDbValue);
            }

            if (noTelpon.isEmpty()) {
                stat.setNull(5, java.sql.Types.VARCHAR);
            } else {
                stat.setString(5, noTelpon);
            }

            int rowsInserted = stat.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Data Guru berhasil ditambahkan!");
                loadTable();
                reset();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data guru: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (selectedGuruId == null || selectedGuruId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan pilih guru yang akan diupdate.", "Guru Belum Dipilih", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String nip = txtNip.getText();
        String nama = txtNama.getText();
        java.util.Date utilTanggalLahir = (java.util.Date) spnTanggalLahir.getValue();
        String noTelpon = txtNoTelpon.getText();

        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Guru tidak boleh kosong.", "Validasi Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        java.sql.Date sqlTanggalLahir = null;
        if (utilTanggalLahir != null) {
            sqlTanggalLahir = new java.sql.Date(utilTanggalLahir.getTime());
        }

        Boolean jenisKelaminDbValue = null;
        if (radLaki.isSelected()) {
            jenisKelaminDbValue = true; // Represents 1 for Laki-laki
        } else if (radPerempuan.isSelected()) {
            jenisKelaminDbValue = false; // Represents 0 for Perempuan
        }

        try {
            String sql = "UPDATE guru SET nip = ?, nama = ?, tanggal_lahir = ?, jenis_kelamin = ?, no_telpon = ? WHERE id = ?";
            PreparedStatement stat = conn.prepareStatement(sql);

            if (nip.isEmpty()) {
                stat.setNull(1, java.sql.Types.VARCHAR);
            } else {
                stat.setString(1, nip);
            }
            stat.setString(2, nama);

            if (sqlTanggalLahir == null) {
                stat.setNull(3, java.sql.Types.DATE);
            } else {
                stat.setDate(3, sqlTanggalLahir);
            }

            if (jenisKelaminDbValue == null) {
                stat.setNull(4, java.sql.Types.BOOLEAN);
            } else {
                stat.setBoolean(4, jenisKelaminDbValue);
            }

            if (noTelpon.isEmpty()) {
                stat.setNull(5, java.sql.Types.VARCHAR);
            } else {
                stat.setString(5, noTelpon);
            }
            stat.setString(6, selectedGuruId);

            int rowsUpdated = stat.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data Guru berhasil diupdate!");
                resetUI();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengupdate data guru. Guru tidak ditemukan atau data tidak berubah.", "Update Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate data guru: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (selectedGuruId == null || selectedGuruId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan pilih guru yang akan dihapus.", "Guru Belum Dipilih", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus guru: " + lblSelectedGuru.getText() + "?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            String sql = "DELETE FROM guru WHERE id = ?";
            PreparedStatement stat = conn.prepareStatement(sql);
            stat.setString(1, selectedGuruId);

            int rowsDeleted = stat.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(this, "Data Guru berhasil dihapus!");
                resetUI();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data guru. Guru tidak ditemukan.", "Hapus Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menghapus data guru: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void resetUI() {
        loadTable();
        reset();
    }

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetUI();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dashboard Dashboard = new dashboard();
        Dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        loadTable();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loadTable();
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void tblGuruMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGuruMouseClicked
        int baris = tblGuru.getSelectedRow();
        if (baris != -1) {
            selectedGuruId = tblGuru.getValueAt(baris, 0).toString();
            String nip = tblGuru.getValueAt(baris, 1) != null ? tblGuru.getValueAt(baris, 1).toString() : "";
            String nama = tblGuru.getValueAt(baris, 2).toString(); // Nama is NOT NULL
            Object tanggalLahirObj = tblGuru.getValueAt(baris, 3);
            String jenisKelaminStr = tblGuru.getValueAt(baris, 4) != null ? tblGuru.getValueAt(baris, 4).toString() : "";
            String noTelpon = tblGuru.getValueAt(baris, 5) != null ? tblGuru.getValueAt(baris, 5).toString() : "";

            // txtid.setText(selectedGuruId); // Not directly using txtid for display of ID
            txtNip.setText(nip);
            txtNama.setText(nama);
            lblSelectedGuru.setText(nama); // Update label with selected guru's name

            if (tanggalLahirObj instanceof java.util.Date) { // This covers java.sql.Date
                spnTanggalLahir.setValue(new java.util.Date(((java.util.Date) tanggalLahirObj).getTime()));
            } else {
                spnTanggalLahir.setValue(new java.util.Date()); // Default if null or other type
            }

            if ("Laki-laki".equalsIgnoreCase(jenisKelaminStr)) {
                radLaki.setSelected(true);
            } else if ("Perempuan".equalsIgnoreCase(jenisKelaminStr)) {
                radPerempuan.setSelected(true);
            } else {
                buttonGroup1.clearSelection(); // Clear if no match or null
            }
            txtNoTelpon.setText(noTelpon);
            // txt_mapel.setText(g); // Field not in guru table schema
            // txt_waliKelas.setText(h); // Field not in guru table schema
        }
    }//GEN-LAST:event_tblGuruMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Guru().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectedGuru;
    private javax.swing.JRadioButton radLaki;
    private javax.swing.JRadioButton radPerempuan;
    private javax.swing.JSpinner spnTanggalLahir;
    private javax.swing.JTable tblGuru;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNip;
    private javax.swing.JTextField txtNoTelpon;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
